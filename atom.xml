<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>chenyt</title>
  
  <subtitle>陈勇涛</subtitle>
  <link href="https://chenyt688.github.io/atom.xml" rel="self"/>
  
  <link href="https://chenyt688.github.io/"/>
  <updated>2021-04-08T00:37:25.196Z</updated>
  <id>https://chenyt688.github.io/</id>
  
  <author>
    <name>陈勇涛</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo博客美化</title>
    <link href="https://chenyt688.github.io/2020/01/03/Hexo%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/"/>
    <id>https://chenyt688.github.io/2020/01/03/Hexo%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/</id>
    <published>2020-01-02T16:00:00.000Z</published>
    <updated>2021-04-08T00:37:25.196Z</updated>
    
    <content type="html"><![CDATA[<h3 id="更换主题使用-yilia"><a href="#更换主题使用-yilia" class="headerlink" title="更换主题使用 yilia"></a>更换主题使用 yilia</h3><p>自定义博客主题：<a href="https://github.com/litten/hexo-theme-yilia">https://github.com/litten/hexo-theme-yilia</a><br>在站点目录下执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;litten&#x2F;hexo-theme-yilia.git themes&#x2F;yilia</span><br></pre></td></tr></table></figure><p>修改站点目录_config.yml配置 更换主题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class="line">theme: yilia</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="修改头像"><a href="#修改头像" class="headerlink" title="修改头像"></a>修改头像</h3><p>一、编辑主题theme目录下的 _config.yml，新增字段 avatar， 值设置成头像的链接地址。</p><p>a.头像的链接地址：</p><p>①完整的互联网 URL</p><p>②站点内的地址，例如：</p><ul><li><p>/images/avatar.jpg 需要将你的头像图片放置在 站点的 source/images/（新建images目录）</p></li><li><p>/images/avatar.jpg 需要将你的头像图片放置在 主题的 source/images/ 目录下。</p></li></ul><h3 id="添加卡通人物"><a href="#添加卡通人物" class="headerlink" title="添加卡通人物"></a>添加卡通人物</h3><p>①输入命令获取 live2d ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><p>②输入以下命令，下载相应的模型，将 packagename 更换成模型名称即可(<a href="https://github.com/xiazeyu/live2d-widget-models">查看模型</a>  <a href="https://huaji8.top/post/live2d-plugin-2.0/">模型样式展览</a>)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install packagename</span><br></pre></td></tr></table></figure><p>③配置站点目录下的 _config.yml 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">###卡通人物</span><br><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  model: </span><br><span class="line">    #模型选择</span><br><span class="line">    use: live2d-widget-model-epsilon2_1</span><br><span class="line">  display: </span><br><span class="line">    position: right  #模型位置</span><br><span class="line">    width: 250       #模型宽度</span><br><span class="line">    height: 600      #模型高度</span><br><span class="line">  mobile: </span><br><span class="line">    show: false      #是否在手机端显示</span><br></pre></td></tr></table></figure><h3 id="设置首页点击所有文章右滑动出现文章目录"><a href="#设置首页点击所有文章右滑动出现文章目录" class="headerlink" title="设置首页点击所有文章右滑动出现文章目录"></a>设置首页点击所有文章右滑动出现文章目录</h3><p>注意：node版本大于6.2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm i hexo-generator-json-content --save</span><br></pre></td></tr></table></figure><p>在根目录_config.yml里添加配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">jsonContent:</span><br><span class="line">    meta: false</span><br><span class="line">    pages: false</span><br><span class="line">    posts:</span><br><span class="line">      title: true</span><br><span class="line">      date: true</span><br><span class="line">      path: true</span><br><span class="line">      text: false</span><br><span class="line">      raw: false</span><br><span class="line">      content: false</span><br><span class="line">      slug: false</span><br><span class="line">      updated: false</span><br><span class="line">      comments: false</span><br><span class="line">      link: false</span><br><span class="line">      permalink: false</span><br><span class="line">      excerpt: false</span><br><span class="line">      categories: false</span><br><span class="line">      tags: true</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;更换主题使用-yilia&quot;&gt;&lt;a href=&quot;#更换主题使用-yilia&quot; class=&quot;headerlink&quot; title=&quot;更换主题使用 yilia&quot;&gt;&lt;/a&gt;更换主题使用 yilia&lt;/h3&gt;&lt;p&gt;自定义博客主题：&lt;a href=&quot;https://github.com/litten/hexo-theme-yilia&quot;&gt;https://github.com/litten/hexo-theme-yilia&lt;/a&gt;&lt;br&gt;在站点目录下执行&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git clone https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;litten&amp;#x2F;hexo-theme-yilia.git themes&amp;#x2F;yilia&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;p&gt;修改站点目录_config.yml配置 更换主题&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;## Themes: https:&amp;#x2F;&amp;#x2F;hexo.io&amp;#x2F;themes&amp;#x2F;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;theme: yilia&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="Hexo" scheme="https://chenyt688.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>搭建Hexo博客</title>
    <link href="https://chenyt688.github.io/2020/01/01/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/"/>
    <id>https://chenyt688.github.io/2020/01/01/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/</id>
    <published>2019-12-31T16:00:00.000Z</published>
    <updated>2021-04-13T02:41:35.254Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1.安装Git"></a>1.安装Git</h3><p>①安装git：<a href="https://git-scm.com/download/">https://git-scm.com/download/</a></p><p><img src="https://raw.githubusercontent.com/chenyt688/chenyt688.github.io/master/images/hexo%E5%8D%9A%E5%AE%A2/nodejs_download.png" alt="nodejs"></p><p>②.检查是否安装git成功: 终端输入：git –version或者which git</p><span id="more"></span>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sh-3.2# git --version</span><br><span class="line">git version 2.24.3 (Apple Git-128)</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sh-3.2# which git</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;git</span><br></pre></td></tr></table></figure><h3 id="2-安装Node-js"><a href="#2-安装Node-js" class="headerlink" title="2.安装Node.js"></a>2.安装Node.js</h3><p>①下载地址：<a href="https://nodejs.org/en/">https://nodejs.org/en/</a>     下载LTS版本</p><p>②点击下载的安装包安装</p><p>③查看安装版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sh-3.2# node -v</span><br><span class="line">v14.16.0</span><br><span class="line">sh-3.2# npm -v</span><br><span class="line">6.14.11</span><br></pre></td></tr></table></figure><p>④npm淘宝镜像配置:由于使用npm如果不翻墙基本上是没法正常使用的，所以使用淘宝镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h3 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h3><p>输入命令安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>验证是否安装成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>创建一个空文件夹:例如创建blog目录(操作都是基于这个目录操作)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir bolg</span><br></pre></td></tr></table></figure><p>进入blog目录,初始化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>本地启动: 默认4000端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>新建文章（可通过其他工具编辑放入站点内source/_posts目录下）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;博客名&quot;</span><br></pre></td></tr></table></figure><p>清除缓存 网页正常情况下可以忽略此条命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>生成静态网页</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g   </span><br></pre></td></tr></table></figure><h3 id="4-GitHub创建个人仓库"><a href="#4-GitHub创建个人仓库" class="headerlink" title="4.GitHub创建个人仓库"></a>4.GitHub创建个人仓库</h3><p>①新建</p><p>②仓库名规则：用户名.github.io<br>原因是: git只允许每个人有一个以 用户名.github.io 命名的仓库，<br>例如，我的用户是chenyt688, 那么我的唯一对应主页应该是 chenyt688.github.io, 仓库名也必须命名为 chenyt688.github.io。</p><h3 id="5-将hexo部署到GitHub"><a href="#5-将hexo部署到GitHub" class="headerlink" title="5.将hexo部署到GitHub"></a>5.将hexo部署到GitHub</h3><p>①安装插件，用于将博客推送到github</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><p>②修改_config.yml，配置github</p><p>type：类型<br>repo:  推送url<br>branch: 推送分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">104 deploy:</span><br><span class="line">105   type: git</span><br><span class="line">106   repo: https:&#x2F;&#x2F;github.com&#x2F;chenyt688&#x2F;chenyt688.github.io.git</span><br><span class="line">107   branch: master</span><br></pre></td></tr></table></figure><h3 id="6-发布文章"><a href="#6-发布文章" class="headerlink" title="6.发布文章"></a>6.发布文章</h3><p>①推送文章</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo clean #清除缓存 网页正常情况下可以忽略此条命令</span><br><span class="line">hexo g #生成静态网页</span><br><span class="line">hexo d #开始部署</span><br><span class="line"></span><br><span class="line">一次性执行</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;1-安装Git&quot;&gt;&lt;a href=&quot;#1-安装Git&quot; class=&quot;headerlink&quot; title=&quot;1.安装Git&quot;&gt;&lt;/a&gt;1.安装Git&lt;/h3&gt;&lt;p&gt;①安装git：&lt;a href=&quot;https://git-scm.com/download/&quot;&gt;https://git-scm.com/download/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/chenyt688/chenyt688.github.io/master/images/hexo%E5%8D%9A%E5%AE%A2/nodejs_download.png&quot; alt=&quot;nodejs&quot;&gt;&lt;/p&gt;
&lt;p&gt;②.检查是否安装git成功: 终端输入：git –version或者which git&lt;/p&gt;</summary>
    
    
    
    
    <category term="Hexo" scheme="https://chenyt688.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>hashmap 1.7和1.8 put方法流程</title>
    <link href="https://chenyt688.github.io/2019/08/20/hashmap%E8%A7%A3%E6%9E%90%E4%B8%8E1.7%E5%92%8C1.8%20put%E6%96%B9%E6%B3%95%E6%B5%81%E7%A8%8B/"/>
    <id>https://chenyt688.github.io/2019/08/20/hashmap%E8%A7%A3%E6%9E%90%E4%B8%8E1.7%E5%92%8C1.8%20put%E6%96%B9%E6%B3%95%E6%B5%81%E7%A8%8B/</id>
    <published>2019-08-19T16:00:00.000Z</published>
    <updated>2021-04-13T02:41:28.219Z</updated>
    
    <content type="html"><![CDATA[<h3 id="hashmap1-7-put方法流程图"><a href="#hashmap1-7-put方法流程图" class="headerlink" title="hashmap1.7 put方法流程图"></a>hashmap1.7 put方法流程图</h3><p>自制</p><p><img src="https://raw.githubusercontent.com/chenyt688/chenyt688.github.io/master/images/hashmap_put_1.7.png" alt="hashmap_put_1.7"></p><h3 id="hashmap1-8-put方法流程图"><a href="#hashmap1-8-put方法流程图" class="headerlink" title="hashmap1.8 put方法流程图"></a>hashmap1.8 put方法流程图</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;hashmap1-7-put方法流程图&quot;&gt;&lt;a href=&quot;#hashmap1-7-put方法流程图&quot; class=&quot;headerlink&quot; title=&quot;hashmap1.7 put方法流程图&quot;&gt;&lt;/a&gt;hashmap1.7 put方法流程图&lt;/h3&gt;&lt;p&gt;自制</summary>
      
    
    
    
    
    <category term="java" scheme="https://chenyt688.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>oracle锁表、数据恢复、备份</title>
    <link href="https://chenyt688.github.io/2019/08/10/oracle%E9%94%81%E8%A1%A8%E3%80%81%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E3%80%81%E5%A4%87%E4%BB%BD/"/>
    <id>https://chenyt688.github.io/2019/08/10/oracle%E9%94%81%E8%A1%A8%E3%80%81%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D%E3%80%81%E5%A4%87%E4%BB%BD/</id>
    <published>2019-08-09T16:00:00.000Z</published>
    <updated>2021-04-08T01:52:13.540Z</updated>
    
    <content type="html"><![CDATA[<h3 id="plsql查看是否锁表，锁模式等，以及解锁SQL"><a href="#plsql查看是否锁表，锁模式等，以及解锁SQL" class="headerlink" title="plsql查看是否锁表，锁模式等，以及解锁SQL"></a>plsql查看是否锁表，锁模式等，以及解锁SQL</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">SELECT l.session_id sid,  </span><br><span class="line">           s.serial#,  </span><br><span class="line">           l.locked_mode 锁模式,  </span><br><span class="line">           l.oracle_username 登录用户,  </span><br><span class="line">           l.os_user_name 登录机器用户名,  </span><br><span class="line">           s.machine 机器名,  </span><br><span class="line">           s.terminal 终端用户名,  </span><br><span class="line">           o.object_name 被锁对象名,  </span><br><span class="line">           s.logon_time 登录数据库时间  </span><br><span class="line">    FROM v$locked_object l, all_objects o, v$session s  </span><br><span class="line">    WHERE l.object_id &#x3D; o.object_id  </span><br><span class="line">       AND l.session_id &#x3D; s.sid  </span><br><span class="line">    ORDER BY sid, s.serial#;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">--解锁引号中&#39;sid,serial&#39;</span><br><span class="line">ALTER system kill session &#39;60,4111&#39;;</span><br></pre></td></tr></table></figure><span id="more"></span><p>注意：解锁需要有相关权限的用户才可以的</p><h3 id="误删数据，恢复"><a href="#误删数据，恢复" class="headerlink" title="误删数据，恢复"></a>误删数据，恢复</h3><p>①、恢复误删表</p><p>a.执行以下sql语句，找到被自己误删的数据表对应的object_name；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user_recyclebin t;--查看被删掉的表</span><br></pre></td></tr></table></figure><p>b.根据得到的object_name恢复数据表；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flashback Table &quot;BIN$045mLx94SO24hz4+TLwDgg&#x3D;&#x3D;$0&quot; to before drop; --根据object_name恢复被删除的表</span><br></pre></td></tr></table></figure><p> ②、恢复误删数据</p><p>a.根据误删数据的时间，</p><p>如：数据是一小时前被误删的，那么就查询一小时前的数据，看数据总数是否正确，如果不正确，继续调整时间戳，sql如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test1 as of timestamp sysdate - 1&#x2F;24;--查看一小时前的数据总数</span><br></pre></td></tr></table></figure><p>b.修改表的行为可移动的，如果没有这步操作，会报错误ORA-08189。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table test1 enable row movement;--修改表为可移动行</span><br></pre></td></tr></table></figure><p>c.执行下面sql，恢复表到一小时状态；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flashback table test1 to timestamp sysdate - 1&#x2F;24;--恢复表到一小时前的状态</span><br></pre></td></tr></table></figure><h3 id="备份数据"><a href="#备份数据" class="headerlink" title="备份数据"></a>备份数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--创建表结构</span><br><span class="line">create table Table_20150720 as select * from Table</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * into 新表名 from 旧表名;sqlserver中，如果目标表已存在：</span><br><span class="line">insert into 新表名 select * from 旧表名;oracle中，如果目标表不存在：</span><br><span class="line">create table 新表名 as select * from 旧表名;oracle中，如果目标表已存在（方法同sqlserver）：</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;plsql查看是否锁表，锁模式等，以及解锁SQL&quot;&gt;&lt;a href=&quot;#plsql查看是否锁表，锁模式等，以及解锁SQL&quot; class=&quot;headerlink&quot; title=&quot;plsql查看是否锁表，锁模式等，以及解锁SQL&quot;&gt;&lt;/a&gt;plsql查看是否锁表，锁模式等，以及解锁SQL&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SELECT l.session_id sid,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           s.serial#,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           l.locked_mode 锁模式,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           l.oracle_username 登录用户,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           l.os_user_name 登录机器用户名,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           s.machine 机器名,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           s.terminal 终端用户名,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           o.object_name 被锁对象名,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           s.logon_time 登录数据库时间  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FROM v$locked_object l, all_objects o, v$session s  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    WHERE l.object_id &amp;#x3D; o.object_id  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       AND l.session_id &amp;#x3D; s.sid  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ORDER BY sid, s.serial#;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--解锁引号中&amp;#39;sid,serial&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ALTER system kill session &amp;#39;60,4111&amp;#39;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="oracle" scheme="https://chenyt688.github.io/tags/oracle/"/>
    
  </entry>
  
  <entry>
    <title>MySQL删除数据的方式</title>
    <link href="https://chenyt688.github.io/2019/08/05/mysql%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%E6%96%B9%E5%BC%8F%E5%8C%BA%E5%88%AB/"/>
    <id>https://chenyt688.github.io/2019/08/05/mysql%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%E6%96%B9%E5%BC%8F%E5%8C%BA%E5%88%AB/</id>
    <published>2019-08-04T16:00:00.000Z</published>
    <updated>2021-04-08T00:56:08.343Z</updated>
    
    <content type="html"><![CDATA[<h3 id="MySQL删除数据的方式"><a href="#MySQL删除数据的方式" class="headerlink" title="MySQL删除数据的方式"></a>MySQL删除数据的方式</h3><p>常用的三种删除方式：通过 delete、truncate、drop 关键字进行删除；</p><p>①从执行速度上来说：drop &gt; truncate &gt;&gt; DELETE</p><span id="more"></span><p>1、DELETE</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE from TABLE_NAME where xxx</span><br></pre></td></tr></table></figure><p>a、DELETE属于数据库DML操作语言，只删除数据不删除表的结构，会走事务，执行时会触发trigger；</p><p>b、在 InnoDB 中，DELETE其实并不会真的把数据删除，mysql 实际上只是给删除的数据打了个标记为已删除，因此 delete 删除表中的数据时，表文件在磁盘上所占空间不会变小，存储空间不会被释放，只是把删除的数据行设置为不可见。虽然未释放磁盘空间，但是下次插入数据的时候，仍然可以重用这部分空间（重用 → 覆盖）。</p><p>c、DELETE执行时，会先将所删除数据缓存到rollback segement中，事务commit之后生效;</p><p>d、delete from table_name删除表的全部数据,对于MyISAM 会立刻释放磁盘空间，InnoDB 不会释放磁盘空间;</p><p>e、对于delete from table_name where xxx 带条件的删除, 不管是InnoDB还是MyISAM都不会释放磁盘空间;</p><p>f、delete操作以后使用 optimize table table_name 会立刻释放磁盘空间。不管是InnoDB还是MyISAM 。所以要想达到释放磁盘空间的目的，delete以后执行optimize table 操作。</p><p>g、delete 操作是一行一行执行删除的，并且同时将该行的的删除操作日志记录在redo和undo表空间中以便进行回滚（rollback）和重做操作，生成的大量日志也会占用磁盘空间。</p><p>2、truncate</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Truncate table TABLE_NAME</span><br></pre></td></tr></table></figure><p>a、truncate：属于数据库DDL定义语言，不走事务，原数据不放到 rollback segment 中，操作不触发 trigger。</p><p>执行后立即生效，无法找回</p><p>b、truncate table table_name 立刻释放磁盘空间 ，不管是 InnoDB和MyISAM 。truncate table其实有点类似于drop table 然后creat,只不过这个create table 的过程做了优化，比如表结构文件之前已经有了等等。所以速度上应该是接近drop table的速度;</p><p>c、truncate能够快速清空一个表。并且重置auto_increment的值。</p><p>但对于不同的类型存储引擎需要注意的地方是：</p><p>对于MyISAM，truncate会重置auto_increment（自增序列）的值为1。而delete后表仍然保持auto_increment。</p><p>对于InnoDB，truncate会重置auto_increment的值为1。delete后表仍然保持auto_increment。但是在做delete整个表之后重启MySQL的话，则重启后的auto_increment会被置为1。</p><p>也就是说，InnoDB的表本身是无法持久保存auto_increment。delete表之后auto_increment仍然保存在内存，但是重启后就丢失了，只能从1开始。实质上重启后的auto_increment会从 SELECT 1+MAX(ai_col) FROM t 开始。</p><p>3、drop<br>Drop table Tablename</p><p>a、drop：属于数据库DDL定义语言，同Truncate；</p><p>执行后立即生效，无法找回</p><p>b、drop table table_name 立刻释放磁盘空间 ，不管是 InnoDB 和 MyISAM; drop 语句将删除表的结构被依赖的约束(constrain)、触发器(trigger)、索引(index);  依赖于该表的存储过程/函数将保留,但是变为 invalid 状态。</p><p>可以这么理解，一本书，delete是把目录撕了，truncate是把书的内容撕下来烧了，drop是把书烧了~</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;MySQL删除数据的方式&quot;&gt;&lt;a href=&quot;#MySQL删除数据的方式&quot; class=&quot;headerlink&quot; title=&quot;MySQL删除数据的方式&quot;&gt;&lt;/a&gt;MySQL删除数据的方式&lt;/h3&gt;&lt;p&gt;常用的三种删除方式：通过 delete、truncate、drop 关键字进行删除；&lt;/p&gt;
&lt;p&gt;①从执行速度上来说：drop &amp;gt; truncate &amp;gt;&amp;gt; DELETE&lt;/p&gt;</summary>
    
    
    
    
    <category term="MySQL" scheme="https://chenyt688.github.io/tags/MySQL/"/>
    
  </entry>
  
</feed>
